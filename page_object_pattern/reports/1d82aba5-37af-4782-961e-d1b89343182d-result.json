{"name": "test_login_fail", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"loginname\"]\"}\n  (Session info: chrome=100.0.4896.60)\nStacktrace:\n#0 0x55b3ac11bad3 <unknown>\n#1 0x55b3abe7b568 <unknown>\n#2 0x55b3abeb1c46 <unknown>\n#3 0x55b3abeb1e01 <unknown>\n#4 0x55b3abee4a64 <unknown>\n#5 0x55b3abecf61d <unknown>\n#6 0x55b3abee2824 <unknown>\n#7 0x55b3abecf4e3 <unknown>\n#8 0x55b3abea4d1a <unknown>\n#9 0x55b3abea5e75 <unknown>\n#10 0x55b3ac149efd <unknown>\n#11 0x55b3ac16319b <unknown>\n#12 0x55b3ac14bc65 <unknown>\n#13 0x55b3ac163ec8 <unknown>\n#14 0x55b3ac13f360 <unknown>\n#15 0x55b3ac17fa68 <unknown>\n#16 0x55b3ac17fbe8 <unknown>\n#17 0x55b3ac1997fd <unknown>\n#18 0x7f0f623b5609 <unknown>", "trace": "self = <page_object_pattern.tests.test_login.TestPageFeature object at 0x7f121588e220>\n\n>   ???\n\n/home/aszton/Projects/Selenium-Test-Project/page_object_pattern/Tests/test_login.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages/login_page.py:17: in enter_user_name\n    self.driver.find_element(By.NAME, self.login_input).send_keys(user_name)\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:1244: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f121588e2e0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\\\n#16 0x55b3ac17fbe8 \\\\u003Cunknown>\\\\n#17 0x55b3ac1997fd \\\\u003Cunknown>\\\\n#18 0x7f0f623b5609 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"loginname\"]\"}\nE         (Session info: chrome=100.0.4896.60)\nE       Stacktrace:\nE       #0 0x55b3ac11bad3 <unknown>\nE       #1 0x55b3abe7b568 <unknown>\nE       #2 0x55b3abeb1c46 <unknown>\nE       #3 0x55b3abeb1e01 <unknown>\nE       #4 0x55b3abee4a64 <unknown>\nE       #5 0x55b3abecf61d <unknown>\nE       #6 0x55b3abee2824 <unknown>\nE       #7 0x55b3abecf4e3 <unknown>\nE       #8 0x55b3abea4d1a <unknown>\nE       #9 0x55b3abea5e75 <unknown>\nE       #10 0x55b3ac149efd <unknown>\nE       #11 0x55b3ac16319b <unknown>\nE       #12 0x55b3ac14bc65 <unknown>\nE       #13 0x55b3ac163ec8 <unknown>\nE       #14 0x55b3ac13f360 <unknown>\nE       #15 0x55b3ac17fa68 <unknown>\nE       #16 0x55b3ac17fbe8 <unknown>\nE       #17 0x55b3ac1997fd <unknown>\nE       #18 0x7f0f623b5609 <unknown>\n\n/usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/errorhandler.py:247: NoSuchElementException"}, "attachments": [{"name": "log", "source": "95c21ee3-d295-4c87-9e51-d1a944c5e43e-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "569de352-deeb-422b-9026-86a40d6972da-attachment.txt", "type": "text/plain"}], "start": 1650957447604, "stop": 1650957453574, "uuid": "e4177ce4-f791-46e5-afcf-b3a36064a588", "historyId": "968b1a1ad3d02d75b40be7cf9ad0f84e", "testCaseId": "0ee99aa1bbe499026c9a1f357c800b60", "fullName": "tests.test_login.TestPageFeature#test_login_fail", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestPageFeature"}, {"name": "host", "value": "aszton"}, {"name": "thread", "value": "35925-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}